name: Build and Release Python Executable

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'

    - name: Install PyInstaller
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller

    - name: Build executable
      run: |
        pyinstaller --onefile --windowed SFS.py

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: SimpleFileScanner
        path: dist/SFS.exe

    - name: Get latest tag
      id: get_tag
      run: |
        git fetch --tags
        for /f "delims=" %%a in ('git tag --list') do set "TAG=%%a"
        if not defined TAG set "TAG=v1.0.0"
        echo "TAG_NAME=%TAG%" >> $GITHUB_ENV

    - name: Increment version
      id: increment_version
      run: |
        set /a VERSION=%TAG_NAME:~1%
        set /a NEXT_VERSION=VERSION+1
        set "NEXT_VERSION=v%NEXT_VERSION%"
        echo "::set-output name=NEW_TAG_NAME::%NEXT_VERSION%"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.increment_version.outputs.NEW_TAG_NAME }}
        release_name: ${{ steps.increment_version.outputs.NEW_TAG_NAME }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/SFS.exe
        asset_name: SFS.exe
        asset_content_type: application/octet-stream