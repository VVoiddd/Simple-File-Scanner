name: Build and Release Python Executable

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install pyinstaller

      - name: Build executable
        run: |
          pyinstaller --onefile --windowed SFS.py
          
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: SFS-executable
          path: dist/SFS.exe

      - name: Get latest tag
        id: get_tag
        run: |
            git fetch --tags
            TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
            echo "TAG_NAME=$TAG" >> $GITHUB_ENV
        

      - name: Increment version
        id: increment_version
        run: |
          VERSION=${TAG_NAME:1}
          NEXT_VERSION=$((VERSION + 1))
          NEXT_VERSION="v$NEXT_VERSION"
          echo "NEW_TAG_NAME=$NEXT_VERSION" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.increment_version.outputs.NEW_TAG_NAME }}
          release_name: ${{ steps.increment_version.outputs.NEW_TAG_NAME }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/SFS.exe
          asset_name: SFS.exe
          asset_content_type: application/octet-stream
